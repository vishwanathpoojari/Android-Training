import java.util.Arrays;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.RecursiveTask;

class ParallelMergeSort extends RecursiveTask<int[]> {
    private final int[] array;
    private final int low;
    private final int high;

    public ParallelMergeSort(int[] array, int low, int high) {
        this.array = array;
        this.low = low;
        this.high = high;
    }

    @Override
    protected int[] compute() {
        if (low < high) {
            int mid = (low + high) / 2;

            ParallelMergeSort leftTask = new ParallelMergeSort(array, low, mid);
            ParallelMergeSort rightTask = new ParallelMergeSort(array, mid + 1, high);

            invokeAll(leftTask, rightTask);

            int[] leftResult = leftTask.join();
            int[] rightResult = rightTask.join();

            return merge(leftResult, rightResult);
        } else {
            return Arrays.copyOfRange(array, low, high + 1);
        }
    }

    private int[] merge(int[] left, int[] right) {
        int[] merged = new int[left.length + right.length];
        int leftIndex = 0, rightIndex = 0, mergedIndex = 0;

        while (leftIndex < left.length && rightIndex < right.length) {
            if (left[leftIndex] < right[rightIndex]) {
                merged[mergedIndex++] = left[leftIndex++];
            } else {
                merged[mergedIndex++] = right[rightIndex++];
            }
        }

        while (leftIndex < left.length) {
            merged[mergedIndex++] = left[leftIndex++];
        }

        while (rightIndex < right.length) {
            merged[mergedIndex++] = right[rightIndex++];
        }

        return merged;
    }
}

public class ParallelMergeSortExample {
    public static void main(String[] args) {
        int[] array = {8, 4, 1, 7, 3, 10, 5, 2, 9, 6};

        ForkJoinPool forkJoinPool = new ForkJoinPool();
        int[] sortedArray = forkJoinPool.invoke(new ParallelMergeSort(array, 0, array.length - 1));

        System.out.println("Original Array: " + Arrays.toString(array));
        System.out.println("Sorted Array: " + Arrays.toString(sortedArray));
    }
}
